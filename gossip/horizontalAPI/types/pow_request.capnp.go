// Code generated by capnpc-go. DO NOT EDIT.

package types

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
)

// Requesting a challenge for the periodic PoW on the horizontalApi.
type PowReq capnp.Struct

// PowReq_TypeID is the unique identifier for the type PowReq.
const PowReq_TypeID = 0xc35970a9753697f2

func NewPowReq(s *capnp.Segment) (PowReq, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return PowReq(st), err
}

func NewRootPowReq(s *capnp.Segment) (PowReq, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return PowReq(st), err
}

func ReadRootPowReq(msg *capnp.Message) (PowReq, error) {
	root, err := msg.Root()
	return PowReq(root.Struct()), err
}

func (s PowReq) String() string {
	str, _ := text.Marshal(0xc35970a9753697f2, capnp.Struct(s))
	return str
}

func (s PowReq) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (PowReq) DecodeFromPtr(p capnp.Ptr) PowReq {
	return PowReq(capnp.Struct{}.DecodeFromPtr(p))
}

func (s PowReq) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s PowReq) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s PowReq) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s PowReq) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// PowReq_List is a list of PowReq.
type PowReq_List = capnp.StructList[PowReq]

// NewPowReq creates a new list of PowReq.
func NewPowReq_List(s *capnp.Segment, sz int32) (PowReq_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[PowReq](l), err
}

// PowReq_Future is a wrapper for a PowReq promised by a client call.
type PowReq_Future struct{ *capnp.Future }

func (f PowReq_Future) Struct() (PowReq, error) {
	p, err := f.Future.Ptr()
	return PowReq(p.Struct()), err
}
