// Code generated by capnpc-go. DO NOT EDIT.

package types

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
)

// Represents a push message on the horizontalApi.
type PushMsg capnp.Struct

// PushMsg_TypeID is the unique identifier for the type PushMsg.
const PushMsg_TypeID = 0xcd222b580ae1b939

func NewPushMsg(s *capnp.Segment) (PushMsg, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return PushMsg(st), err
}

func NewRootPushMsg(s *capnp.Segment) (PushMsg, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return PushMsg(st), err
}

func ReadRootPushMsg(msg *capnp.Message) (PushMsg, error) {
	root, err := msg.Root()
	return PushMsg(root.Struct()), err
}

func (s PushMsg) String() string {
	str, _ := text.Marshal(0xcd222b580ae1b939, capnp.Struct(s))
	return str
}

func (s PushMsg) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (PushMsg) DecodeFromPtr(p capnp.Ptr) PushMsg {
	return PushMsg(capnp.Struct{}.DecodeFromPtr(p))
}

func (s PushMsg) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s PushMsg) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s PushMsg) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s PushMsg) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s PushMsg) Ttl() uint8 {
	return capnp.Struct(s).Uint8(0)
}

func (s PushMsg) SetTtl(v uint8) {
	capnp.Struct(s).SetUint8(0, v)
}

func (s PushMsg) GossipType() uint16 {
	return capnp.Struct(s).Uint16(2)
}

func (s PushMsg) SetGossipType(v uint16) {
	capnp.Struct(s).SetUint16(2, v)
}

func (s PushMsg) MessageID() uint16 {
	return capnp.Struct(s).Uint16(4)
}

func (s PushMsg) SetMessageID(v uint16) {
	capnp.Struct(s).SetUint16(4, v)
}

func (s PushMsg) Payload() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s PushMsg) HasPayload() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s PushMsg) SetPayload(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

// PushMsg_List is a list of PushMsg.
type PushMsg_List = capnp.StructList[PushMsg]

// NewPushMsg creates a new list of PushMsg.
func NewPushMsg_List(s *capnp.Segment, sz int32) (PushMsg_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[PushMsg](l), err
}

// PushMsg_Future is a wrapper for a PushMsg promised by a client call.
type PushMsg_Future struct{ *capnp.Future }

func (f PushMsg_Future) Struct() (PushMsg, error) {
	p, err := f.Future.Ptr()
	return PushMsg(p.Struct()), err
}
